# -------------------------------------------------------------------
# standard.conf
# -------------------------------------------------------------------
#
# This is the default configuration file for the OpTools for Oracle Databases.
# All default definitions are made here for all scripts.
# If you want to use other definitions it is recommended that 
# you copy this file to an oracle_tools_$ORACLE_SID.conf and in that file, 
# you keep ONLY THOSE sections and parameters that you need to change to your needs.
# If that file exists in the same directory as the oracle_tools.conf itself, 
# it will automatically be processed. 
# Its settings will overwrite the defaults.
#
# E.g. you may need a specific [ORARMAN] section containing other RMAN commands
# for parameter FULL than the default.
#
#  +===============================================================+
#  | DO NOT CHANGE THIS FILE!                                      |
#  |                                                               |
#  | USE:     oracle_tools_$ORACLE_SID.conf                        |
#  |                                                               |
#  | and overwrite the necessary parameters with your definitions! |
#  |                                                               |
#  | See the notes above.                                          |
#  +===============================================================+
#
# -----
# General structure:
#
# [section]
# parameter = value
#
#
# -----
# Replacements and general usage within this configuration file:
#
# Generally, all sections, parameters and values are case sensitive.
#
# Replacements:
#   %%ENVVAR%%    will be replaced by the contents of the environment variable ENVVAR.
#   `os command`  will be replaced by the output of the os command.
#   [[parameter]] will be replaced by the value of the parameter 'parameter' in the same section.
#
#   Do not define endless recursive replacements! They will be aborted after 100 replacements.
#   AND DO NOT use e.g. %%%%envvar%%%%, that will be replaced to %%xxx%% where xxx is
#   the contents of the environment variable 'envvar' and then %%xxx%% will be replaced
#   by the contents of the environment variable 'xxx' (if it exists), and so on.
#
# Multi-line values can be defined with the here notation like:
# parameter = <<EOT
#   any value line 1
#   any value line 2
# EOT
#



# ===================================================================
[GENERAL]

# General section

#  +=====================================================+
#  | DO NOT CHANGE THIS FILE                             |
#  | USE A SECOND ONE                                    |
#  | and overwrite the parameters with your definition!  |
#  |                                                     |
#  | See the notes at the beginning of this file.        |
#  +=====================================================+


# -----
# Where to place the work and temporary files

# That will create a subdirectory 'var' below the given directory.
WORKING_DIR = /var/tmp/oracle_optools/%%ORACLE_SID%%
# It contains files where values from the last execution are saved
# mainly to build delta values.


# -----
# TEST_BEFORE_RUN
#
# This command is executed on os level and if its return value is 
#  = 0, then the following perl script is executed.
# != 0, then the calling script exits and does not execute the following perl script.
#
# No test is done, if no TEST_BEFORE_RUN is specified.


# SCCL commands must be in PATH of oracle_env
TEST_BEFORE_RUN = sccl_test_res oracle_%%ORACLE_SID%%
# TEST_BEFORE_RUN = /usr/local/sccl/bin/sccl_test_res oracle_%%ORACLE_SID%%
# TEST_BEFORE_RUN = /usr/local/sccl/bin/sccl_test_res dummy
# Looks as if 'cd' does not work! Why?
# TEST_BEFORE_RUN = cd /oracle/admin/%%ORACLE_SID%%
# 'ls' works
# TEST_BEFORE_RUN = ls /oracle/admin/%%ORACLE_SID%%


# ===================================================================
[ORACLE]

#  +=====================================================+
#  | DO NOT CHANGE THIS FILE                             |
#  | USE A SECOND ONE                                    |
#  | and overwrite the parameters with your definition!  |
#  |                                                     |
#  | See the notes at the beginning of this file.        |
#  +=====================================================+


# -----
# ORACLE_SID
#
# You MAY set the ORACLE_SID here but normally it is set 
# in the environment script to which the oracle_env links 
# points to.
#
# ORACLE_SID = orcl

# -----
# ORACLE_HOME
#
# You MAY set the ORACLE_SID here but normally it is set
# in the environment script to which the oracle_env links
# points to.
#
# ORACLE_HOME = /oracle/product/...


# -----
# SQLPLUS_COMMAND
#
# Set the sqlplus command, mostly if a special user will
# execute the sqlplus command and not the SYSDBA.

# This is the default
# SQLPLUS_COMMAND = sqlplus -S "/ as sysdba"
#
# SQLPLUS_COMMAND = sqlplus -S "sys/password as sysdba"


# -----
# RMAN_INVOCATION
#
# This command is used to start the RMAN utility to 
# perform backups.

# That is the default:
# RMAN_INVOCATION = %%ORACLE_HOME%%/bin/rman TARGET /




# ===================================================================
[ULS]

#  +=====================================================+
#  | DO NOT CHANGE THIS FILE                             |
#  | USE A SECOND ONE                                    |
#  | and overwrite the parameters with your definition!  |
#  |                                                     |
#  | See the notes at the beginning of this file.        |
#  +=====================================================+

# -----
# The ULS_HOSTNAME is the name of the server under which Oracle's
# data will be placed. This may be a concrete hostname, a name of
# a cluster package or a virtual hostname (but must be known in
# the ULS-Server's server list).

# 'hostname -s' will not work on HP-UX
# ULS_HOSTNAME = `hostname -s`
# ULS_HOSTNAME = my.constant.expression
ULS_HOSTNAME=`if [ "$(uname)" = "HP-UX" ] ; then hostname ; else hostname -s ;fi`

# -----
# ULS_SECTION
#
# The section expression used in ULS

ULS_SECTION = Oracle DB [%%ORACLE_SID%%]


# -----
# Optional ULS-related settings
#
# But in most cases the defaults will do fine.

# Path and name of the uls.conf (of uls-client package),
# ULS_CONF = /etc/uls/uls.conf

# If set to 1, no transfer of values to the ULS-server will be
# startet. The directory containing the value file(s) (derived from ULS_DATA_CACHE)
# will not be deleted.
# ULS_FAKE = 1

# Master path from which to build the final directory.
# The process id will be appended.
# ULS_DATA_CACHE = /tmp/uls
# The resulting directory will e.g. look like: /tmp/uls.01234

# The command that will transfer the contents of the directory
# as ULS value files to the ULS server and remove the directory
# when finished.
# ULS_FLUSH_TEST_VALUES = flush_test_values __DIRECTORY__
# ULS_FLUSH_TEST_VALUES = flush_test_values -u <uls_ip:uls_port> __DIRECTORY__

# The encoding of the written uls value file.
# { 'latin1' | 'utf8' } are supported, 'latin1' is the default.
# ULS_OUTPUT_ENCODING = utf8


# ===================================================================
[ORARMAN]

#  +=====================================================+
#  | DO NOT CHANGE THIS FILE                             |
#  | USE A SECOND ONE                                    |
#  | and overwrite the parameters with your definition!  |
#  |                                                     |
#  | See the notes at the beginning of this file.        |
#  +=====================================================+


# The section for ORARMAN (orarman)
# By default, three RMAN commands are defined in different parameters:
# LEVEL0 for a full database backup, intended to run once a week,
# LEVEL1 for a cumulative incremental database backup, intended to run once a day
# REDOLOGS for the backup of the current redo log and all other redo logs 
# that are not backed up since the last run (for REDOLOGS).
#
# You may change the existing parameters (like FULL, LEVEL0...) or add new ones.
# Change the calling scripts accordingly, because you must specify 
# that parameter as command line argument.

# -----
# The NetWorker environment variables must be set in the oracle environment script, e.g.:
#
#   NSR_SERVER=ldasipa005
#   NSR_DATA_VOLUME_POOL=MONTHD005
#   NSR_CLIENT=`hostname --fqdn`
#   NSR_SAVESET_BROWSE="40 day"
#   NSR_SAVESET_RETENTION="40 day"
#
# You may have to set other environment variables 
# if you use something else than Networker.

# -----
# FORMAT spec for CONFIGURE CHANNEL:
# %c - Specifies the copy number of the backup piece within a set of duplexed backup pieces
# %d - Specifies the name of the database
# %I - Specifies the DBID.
# %p - Specifies the piece number within the backup set
# %T - Specifies the year, month, and day in the Gregorian calendar in this format: YYYYMMDD.
# %u - specifies an 8-character name constituted by compressed representations of the backup set number 
#      and the time the backup set was created.
#
# %e - Specifies the archived log sequence number.



# -----
# Full backup (same as level 0)

# Teststep in ULS:
FULL_IDENTIFIER = _orarman

# RMAN commands:
FULL = <<EOT
    CONFIGURE BACKUP OPTIMIZATION OFF;
    CONFIGURE RETENTION POLICY TO RECOVERY WINDOW OF 31 DAYS;

    CONFIGURE DEVICE TYPE 'SBT_TAPE' CLEAR;
    CONFIGURE DEFAULT DEVICE TYPE TO 'SBT_TAPE';
    CONFIGURE CHANNEL DEVICE TYPE 'SBT_TAPE' CLEAR;
    CONFIGURE CHANNEL DEVICE TYPE 'SBT_TAPE' FORMAT 'LEVEL0_%d_%I_`date +"%Y%m%dT%H%M%S"`_%u_%p_%c';

    CONFIGURE CONTROLFILE AUTOBACKUP FORMAT FOR DEVICE TYPE 'SBT_TAPE' TO 'CONTROL_%d_%F';
    CONFIGURE CONTROLFILE AUTOBACKUP ON;

    SHOW ALL;

    # -----
    # BACKUP INCREMENTAL LEVEL 0 DATABASE;
    # Recommended by EMC for DataDomain: FILESPERSET 1
    # mx length for TAG: 31 characters
    BACKUP INCREMENTAL LEVEL 0 DATABASE FILESPERSET 1 TAG='LEVEL0%%ORACLE_SID%%`date +"%Y%m%dT%H%M%S"`';

    LIST BACKUP SUMMARY;
    EXIT;

EOT



# -----
# Level 0, full [incremental] backup

# Teststep in ULS:
LEVEL0_IDENTIFIER = _orarman

# RMAN commands:
LEVEL0 = <<EOT
    CONFIGURE BACKUP OPTIMIZATION OFF;
    CONFIGURE RETENTION POLICY TO RECOVERY WINDOW OF 31 DAYS;

    CONFIGURE DEVICE TYPE 'SBT_TAPE' CLEAR;
    CONFIGURE DEFAULT DEVICE TYPE TO 'SBT_TAPE';
    CONFIGURE CHANNEL DEVICE TYPE 'SBT_TAPE' CLEAR;
    CONFIGURE CHANNEL DEVICE TYPE 'SBT_TAPE' FORMAT 'LEVEL0_%d_%I_`date +"%Y%m%dT%H%M%S"`_%u_%p_%c';

    CONFIGURE CONTROLFILE AUTOBACKUP FORMAT FOR DEVICE TYPE 'SBT_TAPE' TO 'CONTROL_%d_%F';
    CONFIGURE CONTROLFILE AUTOBACKUP ON;

    SHOW ALL;

    # -----
    # BACKUP INCREMENTAL LEVEL 0 DATABASE;
    # Recommended by EMC for DataDomain: FILESPERSET 1
    # mx length for TAG: 31 characters
    BACKUP INCREMENTAL LEVEL 0 DATABASE FILESPERSET 1 TAG='LEVEL0%%ORACLE_SID%%`date +"%Y%m%dT%H%M%S"`';

    LIST BACKUP SUMMARY;
    EXIT;

EOT


# -----
# Level 1, cumulative incremental backup (for daily execution in conjunction with LEVEL0 above)

# Teststep in ULS:
LEVEL1_IDENTIFIER = _orarman

# RMAN commands:
LEVEL1 = <<EOT
    CONFIGURE BACKUP OPTIMIZATION OFF;
    CONFIGURE RETENTION POLICY TO RECOVERY WINDOW OF 31 DAYS;

    CONFIGURE DEVICE TYPE 'SBT_TAPE' CLEAR;
    CONFIGURE DEFAULT DEVICE TYPE TO 'SBT_TAPE';
    CONFIGURE CHANNEL DEVICE TYPE 'SBT_TAPE' CLEAR;
    CONFIGURE CHANNEL DEVICE TYPE 'SBT_TAPE' FORMAT 'LEVEL1_%d_%I_`date +"%Y%m%dT%H%M%S"`_%u_%p_%c';

    CONFIGURE CONTROLFILE AUTOBACKUP FORMAT FOR DEVICE TYPE 'SBT_TAPE' TO 'CONTROL_%d_%F';
    CONFIGURE CONTROLFILE AUTOBACKUP ON;

    SHOW ALL;

    # -----
    # BACKUP INCREMENTAL LEVEL 0 DATABASE;
    # Recommended by EMC for DataDomain: FILESPERSET 1
    # mx length for TAG: 31 characters
    BACKUP INCREMENTAL LEVEL 1 CUMULATIVE DATABASE FILESPERSET 1 TAG='LEVEL1%%ORACLE_SID%%`date +"%Y%m%dT%H%M%S"`';

    LIST BACKUP SUMMARY;
    EXIT;

EOT


# -----
# Backup of redo logs (current and all archived since last successful run)

# Teststep in ULS:
REDOLOGS_IDENTIFIER = _orarman_redologs

# RMAN commands:
REDOLOGS =  <<EOP
    CONFIGURE BACKUP OPTIMIZATION OFF;
    CONFIGURE RETENTION POLICY TO RECOVERY WINDOW OF 31 DAYS;

    CONFIGURE DEVICE TYPE 'SBT_TAPE' CLEAR;
    CONFIGURE DEFAULT DEVICE TYPE TO 'SBT_TAPE';
    CONFIGURE CHANNEL DEVICE TYPE 'SBT_TAPE' CLEAR;
    CONFIGURE CHANNEL DEVICE TYPE 'SBT_TAPE' FORMAT 'ARLOG_%d_%I_%e_`date +"%Y%m%dT%H%M%S"`_%u_%p_%c';

    CONFIGURE CONTROLFILE AUTOBACKUP FORMAT FOR DEVICE TYPE 'SBT_TAPE' TO 'CONTROL_%d_%F';
    CONFIGURE CONTROLFILE AUTOBACKUP ON;

    CONFIGURE ARCHIVELOG DELETION POLICY CLEAR;

    SHOW ALL;

    # -----
    # Backup the archived redo logs which have not yet been backed up.
    # BACKUP ARCHIVELOG ALL NOT BACKED UP;
    # Recommended by EMC for DataDomain: FILESPERSET 1
    # max length f r TAG: 31 characters
    BACKUP ARCHIVELOG ALL NOT BACKED UP FILESPERSET 1 TAG='ARLOG%%ORACLE_SID%%`date +"%Y%m%dT%H%M%S"`';

    # Two copies of the archived redo logs on tape?
    # But that will be useless because of deduplication in the DataDomain.
    # BACKUP ARCHIVELOG ALL NOT BACKED UP 2 TIMES;

    # -----
    # Use CROSSCHECK below for just doing a crosscheck of backups once a week.
    # Do not crosscheck at each redo log backup, perhaps only once per week, if ever.
    # It depends mainly on the tape management system.
    # CROSSCHECK ARCHIVELOG ALL;

    # -----
    # Retention time for locally saved archived redo logs (in FRA)
    # (use only one line of the following)
    #
    # Keep for 3 days (default)
    DELETE NOPROMPT ARCHIVELOG ALL BACKED UP 1 TIMES TO 'SBT_TAPE' COMPLETED BEFORE ='SYSDATE-3';
    #
    # Keep for x hours (replace 'x' with the number of hours)
    # DELETE NOPROMPT ARCHIVELOG ALL BACKED UP 1 TIMES TO 'SBT_TAPE' COMPLETED BEFORE ='SYSDATE-x/24';
    # 
    # Keep for x minutes (replace 'x' with the number of minutes)
    # DELETE NOPROMPT ARCHIVELOG ALL BACKED UP 1 TIMES TO 'SBT_TAPE' COMPLETED BEFORE ='SYSDATE-x/(24*60)';
    #
    # Keep only those archived redo logs that have not yet been saved.
    # This may lead to warnings in huge archive redo log generation environments.
    # You should prefer using the above command with a reasonable number of minutes.
    # DELETE NOPROMPT ARCHIVELOG ALL BACKED UP 1 TIMES TO 'SBT_TAPE';

    EXIT;

EOP


# ===================================================================
[ORABACKUP]


#  +=====================================================+
#  | DO NOT CHANGE THIS FILE                             |
#  | USE A SECOND ONE                                    |
#  | and overwrite the parameters with your definition!  |
#  |                                                     |
#  | See the notes at the beginning of this file.        |
#  +=====================================================+

# Old style backup by placing all tablespaces successively in BEGIN BACKUP, 
# then copying all datafiles of that tablespace to the backup location, 
# and reverting the tablespace to END BACKUP.
# spfile, listener.ora, tnsnames.ora etc are also saved to the backup location.

# -----
# Specify an identifier, "_ora_backup" is the default
IDENTIFIER = _ora_backup


# -----
# BACKUP_DESTINATION
#
# Destination directory for the datafiles of the Oracle Backup
#
# No trailing slash please.
#
# NOTE: All files in that directory will be deleted before the backup starts!
#
# Supported placeholders:
#
# __SID__            will be replaced by the current, lowercase ORACLE_SID

BACKUP_DESTINATION = /oracle/backup/%%ORACLE_SID%%/full_backup


# -----
# COPY_COMMAND
#
# The copy command that is used for copying the datafiles
# to the destination directory.

# Supported placeholders:
#
# __SCRIPTSTART__    The start timestamp of the script in the format
#                    YYYY-MM-DD_hhmmss (orabackup.pl, 0.12+)
#
# __SID__            will be replaced by the current, lowercase ORACLE_SID
#                    (you may also use %%ORACLE_SID%% when Misc.pm 0.21+
#                    is used)
#
# __FILE__           contains the complete path of the database file!
#
# __FILES__          contains the complete paths of all database files
#                    of the tablespace being in BACKUP mode.
#                    (orabackup.pl, 0.12+)
#                    You may only specify __FILE__ or __FILES__
#
# __BASEFILENAME__   will be replaced by just the basename of the
#                    datafile (without the preceding directory)
#                    Only use when __FILE__ is specified.
#
# __TABLESPACENAME__ The name of the current tablespace being in BACKUP
#                    mode (orabackup.pl, 0.12+)

# -----
# Mode 1:
# Treat each single file of each tablespace
#
# Remember: you cannot use --test with gzip when using stdout.
#
# COPY_COMMAND = cp __FILE__ __BACKUP_DESTINATION__
# COPY_COMMAND = copy __FILE__ __BACKUP_DESTINATION__

# zip each file of every tablespace
COPY_COMMAND = gzip -c --fast __FILE__ > __BACKUP_DESTINATION__/__BASEFILENAME__.gz


# -----
# Mode 2:
# Treat all files of one tablespace in one statement
# if you use __FILES__ in the COPY_COMMAND.

# tar all files of every tablespace
# COPY_COMMAND = nice tar cvzf __BACKUP_DESTINATION__/__SID_____TABLESPACENAME__.tgz __FILES__

# tar all files of every tablespace, use timestamp in filenames
# COPY_COMMAND = tar cvzf __BACKUP_DESTINATION__/__SID_____SCRIPTSTART_____TABLESPACENAME__.tgz __FILES__
# !!! The above command does not work, check the script !!!


# Networker save
# save the datafiles of each tablespace to Networker
# you must specify the command line parameters for the save command.
# Check the top of this file to see how replacements of e.g. environment variables can be done.

# COPY_COMMAND = /opt/nsr/save -i -s %%NSR_SERVER%% -b %%NSR_DATA_VOLUME_POOL%% __FILES__




# ===================================================================
[ORA_DBINFO]

#  +=====================================================+
#  | DO NOT CHANGE THIS FILE                             |
#  | USE A SECOND ONE                                    |
#  | and overwrite the parameters with your definition!  |
#  |                                                     |
#  | See the notes at the beginning of this file.        |
#  +=====================================================+


# This script is typically called in the "nightly" script.

# -----
# Specify an identifier, "_ora_dbinfo" is the default
IDENTIFIER = _ora_dbinfo

# -----
# ORACLE_FEATURES
#
# Set this to YES, if you want all installed Oracle features
# in the inventory report. The Oracle options which need an
# extra licence are always listed, if present.

# ORACLE_FEATURES = YES

# -----
# AS_SERVER_DOC
#
# Set this to 1, if the report is saved
# in the server documentation section of ULS:
# Main menu
#   -- Administration
#     -- Documentation
#       -- Server Documentation
#         -- <domain>
#           -- <server> | _ora_dbinfo_<sid>

AS_SERVER_DOC = 1

# -----
# AS_VALUE
#
# Set this to 1, if the report is saved as value in:
# Main menu
#   -- since yesterday
#     -- <domain>
#       -- <server>
#         -- Oracle DB [<sid>]
#           -- _ora_dbinfo | Oracle Database Information Report
#

AS_VALUE = 1

# -----
# COMPRESSION
#
# Set one of these parameters to 1 to compress the resulting html file.

# BZIP_THE_REPORT = 1
# GZIP_THE_REPORT = 1
XZ_THE_REPORT = 1



# ===================================================================
[ORA_STATSPACK]

#  +=====================================================+
#  | DO NOT CHANGE THIS FILE                             |
#  | USE A SECOND ONE                                    |
#  | and overwrite the parameters with your definition!  |
#  |                                                     |
#  | See the notes at the beginning of this file.        |
#  +=====================================================+


# -----
# Specify an identifier, "_ora_statspack" is the default
IDENTIFIER = _ora_statspack


# -----
# STATSPACK_OWNER
#
# define the owner of the statspack

STATSPACK_OWNER = PERFSTAT


# -----
# SNAPSHOT_RETENTION
#
# Retention time in days for perfstat snapshots.

SNAPSHOT_RETENTION = 5


# -----
# REPORTs
#
# Normally, the report task is called once a day.
# The report file name will be derived automatically.
# REPORT = <from_time> - <to_time>
#
# A report from the first snapshot at exactly or after <from_time> to
# the snapshot at exactly or the first after the <to_time> will be
# generated and sent to ULS.
#
# <from_time> and <to_time> are specified as HH:MM
# If <to_time> is less or equal to <from_time>, the previous day 
# is assumed for <from_time>.
#
# Do not use blanks in the parameter name of the report!
#
# REPORT = 01:00 - 06:00, 06:00 - 12:00, 12:00 - 18:00

DAILY_REPORT = 08:00 - 17:00

# Add more report time intervals as needed. Use the 
# parameter expression as command line parameter to 
# chose it.

# REPORT_4_to_5 = 16:00 - 17:00
# REPORT_OVERNIGHT = 01:00 - 06:00, 13:00 - 03:00, 08:00 - 08:00


# ===================================================================
[ORA_AWR_ADDM]

#  +=====================================================+
#  | DO NOT CHANGE THIS FILE                             |
#  | USE A SECOND ONE                                    |
#  | and overwrite the parameters with your definition!  |
#  |                                                     |
#  | See the notes at the beginning of this file.        |
#  +=====================================================+


# KEEP IN MIND: 
#   The usage of DIAGNOSTIC+TUNING (control_management_pack_access) is NOT (!!!) 
#   part of the Oracle Standard Edition and must be additionally licensed 
#   for an Oracle Enterprise Edition!
#
# BUT: 
#   It is readily installed for use in your database! 
#   So you may be requested to pay for the necessary license fee.
#   See the output of ora_dbinfo to check which Oracle options you are using.


# -----
# Specify an identifier, "_ora_awr_addm" is the default
IDENTIFIER = _ora_awr_addm

# -----
# SCHEDULE

# <start time> - <end time>, <start time> - <end time> [, ...]
# ...

SCHEDULE = 08:00:00 - 17:00:00


# ===================================================================
[ORA_HOUSEKEEPING]

#  +=====================================================+
#  | DO NOT CHANGE THIS FILE                             |
#  | USE A SECOND ONE                                    |
#  | and overwrite the parameters with your definition!  |
#  |                                                     |
#  | See the notes at the beginning of this file.        |
#  +=====================================================+


# This section is responsible for deleting old logfiles and old audit information.
# It will rotate the alert.log and listener.log every sunday night.
#
# Auditing:
# The database should log all logins and logoffs, so that watch_oracle is able 
# to check for unsuccessful login trials. That may be an attack.
# Set parameter 'audit_trail' to "DB".
#
# Logfiles:
# alert.log is moved and zipped every sunday night.
# listener.log is moved and zipped every sunday night.
# Zipped versions are deleted if older than 200 days.

IDENTIFIER = _ora_housekeeping


# DO NOT CHANGE THIS FILE
# USE A SECOND ONE
# and overwrite the parameters with your definition!
#
# See the notes at the beginning of this file.



# -----
# Logfile Management (1)
# Only static logfiles which normally grow indefinetly.

# The listener.log and the alert.log (and perhaps more) files are daily checked 
# and compressed aside if they are at least greater than ROTATE_LOGFILES_ONLY_GREATER_THAN days.
# Specify the number of days, how long these compressed files shall be kept
# and which command to execute for compression.

# in MB
ROTATE_LOGFILES_ONLY_GREATER_THAN = 100

# "COMPRESS_COMMAND <filename>"
COMPRESS_COMMAND = xz -1

# in days
KEEP_COMPRESSED_LOGFILES_FOR = 100


# -----
# Logfile Management (2)
# Multiple logfiles in different directories.

# ADR_KEEP_FOR
#
# ADR, purging entries/files in diagnostic destination
#
# Specify the number of days, how long trace files etc. shall be kept.

KEEP_ADR_FOR = 30



# -----
# KEEP_AUDIT_ENTRIES_FOR
#
# Old audit entries are purged at each run.
# This parameter defines the number of days, 
# the audit entries are kept in table dba_audit_session.
# (The audit files in adump are NOT removed, see the 'nightly' script)

KEEP_AUDIT_ENTRIES_FOR = 90


# -----
# Clean up SYSAUX
#
# ROWS2DELETE
#
# Specifies the number of rows to be deleted in one DELETE command.
# That limits the amount of UNDO and REDO for a DELETE statement.
# Default is 20000.

ROWS2DELETE = 20000





# ===================================================================
[ORA_GRANTS]

#  +=====================================================+
#  | DO NOT CHANGE THIS FILE                             |
#  | USE A SECOND ONE                                    |
#  | and overwrite the parameters with your definition!  |
#  |                                                     |
#  | See the notes at the beginning of this file.        |
#  | These remarked parameters are examples only.        |
#  +=====================================================+


# Add more sections to your needs in a custom file, give them a unique name which
# must be used in the calling script. See 'ora_grants' for usage.

# -----
# Specify an identifier, "_ora_grants" is the default
IDENTIFIER = _ora_grants


# -----
# REVOKE_ALL_OBJECT_PRIVS
#
# remove all grants to any schema on all objects (tables, views and synonyms)
# for these owners (grantors)

# REVOKE_ALL_OBJECT_PRIVS = <grantor>;<grantor>;<grantor>;<grantor>;...

# REVOKE_ALL_OBJECT_PRIVS = schema01;schema02;


# -----
# GRANT_OBJECT_PRIVS
#
# Grant rights on ALL(!) tables, views and synonyms of a grantor to other database users (grantees).
#
# <grantor>:<right1,[right2] ...>:<grantee1>,<grantee2>, ...,<granteeN>;

# The <grantor> (e.g. "schema01") grants <rights> (e.g. "select,insert")
# to the listed <grantees> (e.g. "schema02,schema03"). The <right> refers
# to all tables, views and synonyms of the <grantor>.

# GRANT_OBJECT_PRIVS = <<EOP
#   <grantor1>:<right1,[right2] ...>:<grantee1>,<grantee2>, ...,<granteeN>;
#   <grantor2>:<right1,[right2] ...>:<grantee1>,<grantee2>, ...,<granteeN>;
#   schema01:select,insert:schema02,schema03;
#   ...
# EOP


# -----
# SPECIFIC_GRANTS
#
# Add more explicit GRANT commands.
# (in fact, ANY sql command will be executed! So be careful!)
# You may also use REVOKE commands (ie.g. after having given object rights to all objects in above section).
#
# Use these entries to grant or revoke specific rights on specific objects to specific database users.
#
# SPECIFIC_GRANTS = <<EOP
#
#   GRANT SELECT        ON MYSCHEMA.TABLE1 TO OTHER_DBUSER;
#   GRANT UPDATE,INSERT ON MYSCHEMA.TABLE2 TO OTHER_DBUSER;
#
# EOP
#

